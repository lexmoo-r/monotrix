from aiogram import Router, types
from aiogram.filters import Command
from sqlalchemy.exc import IntegrityError
from database import SessionPlayer, SessionState
from utils import session_scope, safe_answer

router = Router()

@router.message(Command("join"))
async def join_game(message: types.Message):
    if message.chat.type not in ("group", "supergroup"):
        await safe_answer(message, "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è –∫ –∏–≥—Ä–µ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö.")
        return

    character_name = message.text.replace("/join", "", 1).strip()

    if not character_name:
        await safe_answer(
            message,
            "–ù—É-–∫–∞, –∫—Ç–æ —ç—Ç–æ —É –Ω–∞—Å —Ç—É—Ç? –ù–∞–ø–∏—à–∏ —Å–≤–æ—ë –∏–º—è, —á—Ç–æ–±—ã —è –∑–∞–Ω—ë—Å –µ–≥–æ –≤ —Ä–µ–µ—Å—Ç—Ä –±–µ–∑—É–º—Ü–µ–≤.\n"
            "–ü—Ä–∏–º–µ—Ä: /join –ö–∏—Ä–∏–≥–∏—Ä–∏ –ö—ë–∫–æ"
        )
        return

    if len(character_name) < 2 or len(character_name) > 50:
        await safe_answer(message, "–ï—Å–ª–∏ —Ç–≤–æ—ë –∏–º—è –∏–∑ –æ–¥–Ω–æ–π –±—É–∫–≤—ã ‚Äî –ø–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—à—å –∫–∞—Å—Ç–∏–Ω–≥.")
        return

    with session_scope() as db:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∏–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º
        existing_name = db.query(SessionPlayer).filter_by(name=character_name).first()
        if existing_name:
            await safe_answer(message, f"'{character_name}' —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ. –ü–æ–≥–æ–≤–æ—Ä–∏ —Å —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏ –æ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ.")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∏–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º Telegram ID
        existing_player = db.query(SessionPlayer).filter_by(tg_id=message.from_user.id).first()
        if existing_player:
            await safe_answer(message, "–¢—ã —É–∂–µ –≤ –∏–≥—Ä–µ, –≥–µ–Ω–∏–π.")
            return

        try:
            new_player = SessionPlayer(
                tg_id=message.from_user.id,
                name=character_name,
                username=message.from_user.username
            )
            db.add(new_player)
            db.commit()

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø—É—â–µ–Ω–Ω–æ—Å—Ç—å –∏–≥—Ä—ã
            state = db.query(SessionState).filter_by(chat_id=message.chat.id, started=True).first()
            if state:
                await safe_answer(
                    message,
                    f"{character_name} –∑–∞–ø–∏—Å–∞–Ω –≤ —Å–ø–∏—Å–∫–∏ –æ–∂–∏–¥–∞–Ω–∏—è! üìù –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—à—å—Å—è –≤ –Ω–æ–≤–æ–º —Ä–∞—É–Ω–¥–µ."
                )
            else:
                await safe_answer(
                    message,
                    f"{character_name} –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –Ω–æ–≤–æ–≥–æ –∏—Å–∫–∞—Ç–µ–ª—è –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π!"
                )
        except IntegrityError:
            db.rollback()
            await safe_answer(message, "–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. –î–∞–∂–µ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Ç–µ–±—è –æ—Ñ–∏–≥–µ–ª–∞.")

@router.message(Command("leave"))
async def leave_game(message: types.Message):
    if message.chat.type not in ("group", "supergroup"):
        await safe_answer(message, "–ü–æ–∫–∏–¥–∞—Ç—å –∏–≥—Ä—É –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö.")
        return

    with session_scope() as db:
        player = db.query(SessionPlayer).filter_by(tg_id=message.from_user.id).first()
        if not player:
            await safe_answer(message, "–¢—ã –¥–∞–∂–µ –Ω–µ –∑–∞—à—ë–ª, –Ω–æ —É–∂–µ —Å–≤–∞–ª–∏–≤–∞–µ—à—å? –ü–æ–∑–æ—Ä–∏—â–µ.")
            return

        db.delete(player)
        db.commit()
        await safe_answer(message, f"{player.name} –ø–æ–∫–∏–¥–∞–µ—Ç –∞—Ä–µ–Ω—É, —Å–ø–∞—Å–∞—è—Å—å –æ—Ç –ø–æ–∑–æ—Ä–∞.")

@router.message(Command("rename"))
async def rename_player(message: types.Message):
    if message.chat.type not in ("group", "supergroup"):
        await safe_answer(message, "–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ.")
        return

    args = message.text.strip().split(maxsplit=1)
    if len(args) != 2:
        await safe_answer(message, "–§–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã:\n`/rename <–Ω–æ–≤–æ–µ_–∏–º—è>`", parse_mode="Markdown")
        return

    new_name = args[1].strip()
    if len(new_name) < 2 or len(new_name) > 50:
        await safe_answer(message, "–ò–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 2 –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤.")
        return

    with session_scope() as db:
        player = db.query(SessionPlayer).filter_by(tg_id=message.from_user.id).first()
        if not player:
            await safe_answer(message, "–¢—ã –Ω–µ –≤ –∏–≥—Ä–µ. –ù–µ—á–µ–≥–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞—Ç—å.")
            return

        player.name = new_name
        db.commit()
        await safe_answer(message, f"‚úÖ –¢–µ–ø–µ—Ä—å —Ç—ã –∏–∑–≤–µ—Å—Ç–µ–Ω –∫–∞–∫ {new_name}. –ö—Ä–∞—Å–∏–≤–æ –∑–≤—É—á–∏—Ç, –¥–∞?")